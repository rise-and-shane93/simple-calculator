{"version":3,"sources":["actionTypes/calcActionTypes.js","reducers/calculate.js","reducers/index.js","components/CalcBtns.js","components/Memory.js","components/Screen.js","components/Numbers.js","actions/number.js","App.js","serviceWorker.js","index.js"],"names":["calcActions","calcBtns","numberBtns","memoryBtns","initialState","result","currentItem","displayNum","firstCalc","operatorSymbol","memoryNum","combineReducers","calculate","sum","opSymbol","percentage","inverse","squareRoot","memoryNumber","memorySum","state","action","resNum","parseFloat","currNum","memoryArr","type","num","symbol","Math","sqrt","push","reduce","acc","el","CalcBtns","id","className","onClick","props","addSymbol","equalSymbol","Component","Memory","memoryButton","powerButton","Screen","this","console","log","connect","Numbers","addNumber","calculatorActions","App","dispatch","bindActionCreators","ActionCreators","style","display","Boolean","window","location","hostname","match","store","createStore","rootReducer","devToolsExtension","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e0916d9.chunk.js","sourcesContent":["export const calcActions = {\r\n    POWER_BUTTON: 'POWER_BUTTON',\r\n};\r\n\r\nexport const calcBtns = {\r\n    OPERATOR_BUTTON: 'OPERATOR_BUTTON',\r\n    EQUAL_BUTTON: 'EQUAL_BUTTON'\r\n};\r\n\r\nexport const numberBtns = {\r\n    NUMBER_BTN: 'NUMBER_BTN'\r\n};\r\n\r\nexport const memoryBtns = {\r\n    MEMORY_BTN: 'MEMORY_BTN'\r\n}","import { calcActions, calcBtns, numberBtns, memoryBtns } from '../actionTypes/calcActionTypes';\r\n\r\nconst initialState = {\r\n    result: '',\r\n    currentItem: '',\r\n    displayNum: 0,\r\n    firstCalc: true,\r\n    operatorSymbol: '',\r\n    memoryNum: []\r\n};\r\n\r\nexport default function addNum(state=initialState, action) {\r\n    let resNum = parseFloat(state.result);\r\n    let currNum = parseFloat(state.currentItem);\r\n    let sum;\r\n    let result;\r\n    let opSymbol;\r\n    let percentage;\r\n    let inverse;\r\n    let squareRoot;\r\n    let memoryNumber;\r\n    let memoryArr = state.memoryNum;\r\n    let memorySum;\r\n    switch(action.type) {\r\n        case numberBtns.NUMBER_BTN: {\r\n            return {\r\n                ...state,\r\n                result: state.result,\r\n                currentItem: state.currentItem += action.num,\r\n                displayNum: state.currentItem,\r\n                firstCalc: state.firstCalc\r\n            }\r\n        }\r\n        case calcBtns.OPERATOR_BUTTON: {\r\n            //if the user adds\r\n            if (action.symbol === '+'){\r\n                if (state.firstCalc) {\r\n                    if (typeof state.result === 'string') {\r\n                        result = state.currentItem;\r\n                    } else {\r\n                        result = state.result;\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        result: result,\r\n                        currentItem: '',\r\n                        displayNum: state.result,\r\n                        firstCalc: !state.firstCalc,\r\n                        operatorSymbol: '+'\r\n                    }\r\n                } else {\r\n                    if (state.operatorSymbol === '-' || state.operatorSymbol === '') {\r\n                        sum = resNum - currNum;\r\n                    } else if (state.operatorSymbol === '+' || state.operatorSymbol === '') {\r\n                        sum = resNum + currNum;\r\n                    } else if (state.operatorSymbol === 'x' || state.operatorSymbol === '') {\r\n                        sum = resNum * currNum;\r\n                    } else if (state.operatorSymbol === '/' || state.operatorSymbol === '') {\r\n                        sum = resNum / currNum;\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        result: sum,\r\n                        currentItem: '',\r\n                        displayNum: sum,\r\n                        firstCalc: state.firstCalc,\r\n                        operatorSymbol: '+'\r\n                    }\r\n                }\r\n            //if the user subtracts\r\n            } else if (action.symbol === '-') {\r\n                if (state.firstCalc) {\r\n                    sum = resNum - currNum; \r\n                    if (typeof state.result === 'string') {\r\n                        result = state.currentItem;\r\n                    } else {\r\n                        result = state.result;\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        result: result,\r\n                        currentItem: '',\r\n                        displayNum: state.result,\r\n                        firstCalc: !state.firstCalc,\r\n                        operatorSymbol: '-'\r\n                    }    \r\n                } else {\r\n                    if (state.operatorSymbol === '+' || state.operatorSymbol === '') {\r\n                        sum = resNum + currNum;\r\n                    } else if (state.operatorSymbol === '-') {\r\n                        sum = resNum - currNum;\r\n                    } else if (state.operatorSymbol === 'x') {\r\n                        sum = resNum * currNum;\r\n                    } else if (state.operatorSymbol === '/') {\r\n                        sum = resNum / currNum;\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        result: sum,\r\n                        currentItem: '',\r\n                        displayNum: sum,\r\n                        firstCalc: state.firstCalc,\r\n                        operatorSymbol: '-'\r\n                    }\r\n                }\r\n            } else if (action.symbol === 'x') {\r\n                if (state.firstCalc) {\r\n                    sum = resNum * currNum; \r\n                    if (typeof state.result === 'string') {\r\n                        result = state.currentItem;\r\n                    } else {\r\n                        result = state.result;\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        result: result,\r\n                        currentItem: '',\r\n                        displayNum: state.result,\r\n                        firstCalc: !state.firstCalc,\r\n                        operatorSymbol: 'x'\r\n                    }    \r\n                } else {\r\n                    if (state.operatorSymbol === '+') {\r\n                        sum = resNum + currNum;\r\n                    } else if (state.operatorSymbol === '-') {\r\n                        sum = resNum - currNum;\r\n                    } else if (state.operatorSymbol === 'x') {\r\n                        sum = resNum * currNum;\r\n                    } else if (state.operatorSymbol === '/') {\r\n                        sum = resNum / currNum;\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        result: sum,\r\n                        currentItem: '',\r\n                        displayNum: sum,\r\n                        firstCalc: state.firstCalc,\r\n                        operatorSymbol: 'x'\r\n                    }\r\n                }\r\n            } else if (action.symbol === '/') {\r\n                if (state.firstCalc) {\r\n                    sum = resNum / currNum; \r\n                    if (typeof state.result === 'string') {\r\n                        result = state.currentItem;\r\n                    } else {\r\n                        result = state.result;\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        result: result,\r\n                        currentItem: '',\r\n                        displayNum: state.result,\r\n                        firstCalc: !state.firstCalc,\r\n                        operatorSymbol: '/'\r\n                    }    \r\n                } else {\r\n                    if (state.operatorSymbol === '+') {\r\n                        sum = resNum + currNum;\r\n                    } else if (state.operatorSymbol === '-') {\r\n                        sum = resNum - currNum;\r\n                    } else if (state.operatorSymbol === 'x') {\r\n                        sum = resNum * currNum;\r\n                    } else if (state.operatorSymbol === '/') {\r\n                        sum = resNum / currNum;\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        result: sum,\r\n                        currentItem: '',\r\n                        displayNum: sum,\r\n                        firstCalc: state.firstCalc,\r\n                        operatorSymbol: '/'\r\n                    }\r\n                }\r\n            } else if (action.symbol === '%') {\r\n                if (state.firstCalc) {\r\n                    if (typeof state.result === 'string') {\r\n                        percentage = currNum / 100;\r\n                    } else {\r\n                        percentage = resNum / 100;\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        result: percentage,\r\n                        currentItem: '',\r\n                        displayNum: percentage,\r\n                        firstCalc: state.firstCalc,\r\n                        operatorSymbol: ''\r\n                    }    \r\n                } else {\r\n                    percentage = currNum / 100;\r\n                    return {\r\n                        ...state,\r\n                        currentItem: percentage, \r\n                        displayNum: percentage,\r\n                    }\r\n                }\r\n            } else if (action.symbol === '1/x') {\r\n                if (state.firstCalc) {\r\n                    if (typeof state.result === 'string') {\r\n                        inverse = 1 / currNum;\r\n                    } else {\r\n                        inverse = 1 / resNum;\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        result: inverse,\r\n                        currentItem: '',\r\n                        displayNum: inverse,\r\n                        firstCalc: state.firstCalc,\r\n                        operatorSymbol: ''\r\n                    }    \r\n                } else {\r\n                    inverse = 1 / currNum;\r\n                    return {\r\n                        ...state,\r\n                        currentItem: inverse, \r\n                        displayNum: inverse,\r\n                    }\r\n                }\r\n            } else if (action.symbol === '√') {\r\n                if (state.firstCalc) {\r\n                    if (typeof state.result === 'string') {\r\n                        squareRoot = Math.sqrt(currNum);\r\n                    } else {\r\n                        squareRoot = Math.sqrt(resNum);\r\n                    }\r\n                    return {\r\n                        ...state,\r\n                        result: squareRoot,\r\n                        currentItem: '',\r\n                        displayNum: squareRoot,\r\n                        firstCalc: state.firstCalc,\r\n                        operatorSymbol: ''\r\n                    }    \r\n                } else {\r\n                    squareRoot = Math.sqrt(currNum);\r\n                    return {\r\n                        ...state,\r\n                        currentItem: squareRoot, \r\n                        displayNum: squareRoot,\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        case calcBtns.EQUAL_BUTTON: {\r\n            if (state.operatorSymbol === '+'){\r\n                sum = resNum + currNum;\r\n                opSymbol = '+';\r\n            } else if (state.operatorSymbol === '-') {\r\n                sum = resNum - currNum;\r\n                opSymbol = '-';\r\n            } else if (state.operatorSymbol === 'x') {\r\n                sum = resNum * currNum;\r\n                opSymbol = 'x';\r\n            } else if (state.operatorSymbol === '/') {\r\n                sum = resNum / currNum;\r\n                opSymbol = '/';\r\n            }\r\n            return {\r\n                ...state,\r\n                result: sum,\r\n                currentItem: state.currentItem,\r\n                displayNum: sum,\r\n                firstCalc: true,\r\n                operatorSymbol: opSymbol\r\n            }\r\n        }\r\n        case calcActions.POWER_BUTTON: {\r\n            return {\r\n                ...state,\r\n                result: '',\r\n                currentItem: '',\r\n                displayNum: 0,\r\n                firstCalc: true,\r\n                operatorSymbol: ''\r\n            }\r\n        }\r\n        case memoryBtns.MEMORY_BTN: {\r\n            if (action.symbol === 'M+') {\r\n                if (state.firstCalc) {\r\n                    if (typeof state.result === 'string') {\r\n                        memoryNumber = parseFloat(state.currentItem);\r\n                    } else {\r\n                        memoryNumber = parseFloat(state.result);\r\n                    }\r\n                } else {\r\n                    memoryNumber = parseFloat(state.result);\r\n                }\r\n                memoryArr.push(memoryNumber);\r\n                return {\r\n                    ...state,\r\n                    currentItem: '',\r\n                    memoryNum: memoryArr\r\n                }    \r\n            } else if (action.symbol === 'M-') {\r\n                if (state.firstCalc) {\r\n                    if (typeof state.result === 'string') {\r\n                        memoryNumber = parseFloat(state.currentItem) * -1;\r\n                    } else {\r\n                        memoryNumber = parseFloat(state.result) * -1;\r\n                    }\r\n                } else {\r\n                    memoryNumber = parseFloat(state.result) * -1;\r\n                }\r\n                memoryArr.push(memoryNumber);\r\n                return {\r\n                    ...state,\r\n                    currentItem: '',\r\n                    memoryNum: memoryArr\r\n                }    \r\n            } else if (action.symbol === 'MR') {\r\n                memorySum = memoryArr.reduce((acc,el) => {\r\n                    return acc += el;\r\n                }, 0);\r\n                return {\r\n                    ...state,\r\n                    displayNum: memorySum\r\n                }\r\n            } else if (action.symbol === 'MC') {\r\n                return {\r\n                    ...state,\r\n                    displayNum: 0,\r\n                    memoryNum: []\r\n                }\r\n            }\r\n        }\r\n        default: \r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport calculate from './calculate';\r\n\r\nexport default combineReducers({\r\n    calculate\r\n});","import React, { Component } from 'react';\r\n//import { connect } from 'react-redux';\r\n\r\nclass CalcBtns extends Component {\r\n    render() {\r\n        return(\r\n            <article id=\"calc-buttons\">\r\n                <button className=\"btn calc-btn\" onClick={() => this.props.addSymbol('/')}>&#247;</button>\r\n                <button className=\"btn calc-btn\" onClick={() => this.props.addSymbol('√')}>&#8730;</button>\r\n                <button className=\"btn calc-btn\" onClick={() => this.props.addSymbol('x')}>&times;</button>\r\n                <button className=\"btn calc-btn\" onClick={() => this.props.addSymbol('%')}>&#37;</button>\r\n                <button className=\"btn calc-btn\" onClick={() => this.props.addSymbol('-')}>-</button>\r\n                <button className=\"btn calc-btn\" onClick={() => this.props.addSymbol('1/x')}><sup>1</sup>/<sub>x</sub></button>\r\n                <button className=\"btn calc-btn\" onClick={() => this.props.addSymbol('+')}>+</button>\r\n                <button className=\"btn calc-btn\" onClick={() => this.props.equalSymbol()}>=</button>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\n//export default connect(mapStateToProps)(CalcBtns);\r\nexport default CalcBtns;","import React, { Component } from 'react';\r\n\r\nclass Memory extends Component {\r\n    render() {\r\n        return(\r\n            <article id=\"memory-buttons\">\r\n                <button className=\"btn memory-btn\" onClick={() => this.props.memoryButton('MC')}>MC</button>\r\n                <button className=\"btn memory-btn\" onClick={() => this.props.memoryButton('MR')}>MR</button>\r\n                <button className=\"btn memory-btn\" onClick={() => this.props.memoryButton('M+')}>M+</button>\r\n                <button className=\"btn memory-btn\" onClick={() => this.props.memoryButton('M-')}>M-</button>\r\n                <button className=\"btn power-btn\" onClick={() => this.props.powerButton()}>CE</button>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Memory;","import React, { Component } from 'react';\r\nimport propTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Screen extends Component {\r\n\r\n    // static propTypes = {\r\n    //     num: propTypes.string.isRequired\r\n    // };\r\n\r\n    render() {\r\n        const { displayNum } = this.props;\r\n        console.log(displayNum);\r\n        return(\r\n            <article id=\"screen\">\r\n                <h2 className=\"screenText\">{displayNum}</h2>\r\n            </article>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => (\r\n    {\r\n      displayNum: state.calculate.displayNum,\r\n    }\r\n  );  \r\n\r\nexport default connect(mapStateToProps)(Screen);","import React, { Component } from 'react';\r\n\r\nconst Numbers = (props) => {\r\n    return (\r\n        <article id=\"number-buttons\">\r\n            <button className=\"btn number-btn\" onClick={() => props.addNumber('7')}>7</button>\r\n            <button className=\"btn number-btn\" onClick={() => props.addNumber('8')}>8</button>\r\n            <button className=\"btn number-btn\" onClick={() => props.addNumber('9')}>9</button>\r\n            <button className=\"btn number-btn\" onClick={() => props.addNumber('4')}>4</button>\r\n            <button className=\"btn number-btn\" onClick={() => props.addNumber('5')}>5</button>\r\n            <button className=\"btn number-btn\" onClick={() => props.addNumber('6')}>6</button>\r\n            <button className=\"btn number-btn\" onClick={() => props.addNumber('1')}>1</button>\r\n            <button className=\"btn number-btn\" onClick={() => props.addNumber('2')}>2</button>\r\n            <button className=\"btn number-btn\" onClick={() => props.addNumber('3')}>3</button>\r\n            <button className=\"btn number-btn\" onClick={() => props.addNumber('0')}>0</button>\r\n            <button className=\"btn number-btn\" onClick={() => props.addNumber('.')}>.</button>\r\n            <button className=\"btn number-btn\"><sup>+</sup>/<sub>-</sub></button>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Numbers;","import { calcActions, calcBtns, numberBtns, memoryBtns } from '../actionTypes/calcActionTypes';\r\n\r\nexport const addNumber = num => {\r\n    return {\r\n        type: numberBtns.NUMBER_BTN,\r\n        num\r\n    }\r\n};\r\n\r\nexport const addSymbol = symbol => {\r\n    return {\r\n        type: calcBtns.OPERATOR_BUTTON,\r\n        symbol\r\n    }\r\n}\r\n\r\nexport const memoryButton = symbol => {\r\n    return {\r\n        type: memoryBtns.MEMORY_BTN,\r\n        symbol\r\n    }\r\n}\r\n\r\nexport const calculatorActions = () => {\r\n    return {\r\n        type: calcActions.POWER_BUTTON,\r\n    }\r\n}\r\n\r\nexport const equalSymbol = () => {\r\n    return {\r\n        type: calcBtns.EQUAL_BUTTON,\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport CalcBtns from './components/CalcBtns';\r\nimport Memory from './components/Memory';\r\nimport Screen from './components/Screen';\r\nimport Numbers from './components/Numbers';\r\n//import { calcActions, calcBtns, numberBtns } from './actionTypes/calcActionTypes';\r\nimport * as ActionCreators from './actions/number';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  // static PropTypes = {\r\n\r\n  // }\r\n\r\n  // componentDidMount() {\r\n  //   console.log(ActionCreators.calcActions.POWER_BUTTON);\r\n  // }\r\n\r\n  render() {\r\n    const { dispatch } = this.props;\r\n    const addNumber = bindActionCreators(ActionCreators.addNumber, dispatch);\r\n    const addSymbol = bindActionCreators(ActionCreators.addSymbol, dispatch);\r\n    const equalSymbol = bindActionCreators(ActionCreators.equalSymbol, dispatch);\r\n    const powerButton = bindActionCreators(ActionCreators.calculatorActions, dispatch);\r\n    const memoryButton = bindActionCreators(ActionCreators.memoryButton, dispatch);\r\n\r\n    return (\r\n      <section id=\"calculator\">\r\n        <Screen />\r\n        <div className=\"calcInner\">\r\n          <Memory \r\n            powerButton={powerButton}\r\n            memoryButton={memoryButton}\r\n          />\r\n          <div className=\"flex-container\" style={{ display: 'flex' }}>\r\n            <Numbers \r\n              addNumber={addNumber}\r\n            />\r\n            <CalcBtns \r\n              addSymbol={addSymbol}\r\n              equalSymbol={equalSymbol}\r\n            />\r\n          </div>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => (\r\n  {\r\n    state\r\n  }\r\n);\r\n\r\nexport default connect(mapStateToProps)(App);","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './reducers/index';\r\n//import reduxThunk from 'redux-thunk';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    window.devToolsExtension && window.devToolsExtension()\r\n);\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}